Forbid a site/user/etc named ademo1 to avoid damaging the staging server

Notes on adding support for restructuring the site (not just reordering page children/peers)

Let's say you have a structure like this:

A
  1
    a
    b
  2
    c
    d
    
The problem: you want to move 2 so it becomes a child of b. And you want to move
a so it becomes the parent of c and d.

How should this work in the UI?

Possibilities:

1. A drag and drop site tree, which looks just like the above. You can
drag anything to anyplace in the tree. It looks like this...

A
  before
  1
    before
    a
    b
    after
  2
    before
    c
    d
    after
  after

"before" and "after" are drag and drop landing targets that position something
before 1 or after 2, for instance, with clear indentation so you know that's
the level it will wind up at.

What happens if you drag 2 below b? It brings its entire subtree with it.
Otherwise the proper behavior is very unclear (and the underlying operations
in the nested set get very scary).

Can we use semantic markup for the tree and still get regular drag and drop
to work? I don't know, so I'll find out. I'm thinking not. I'm thinking we'll
have to use css or even plain old spacers to express the nesting. Using
normal single-ul drag and drop is an extremely big win in terms of
compatibility and peace of mind.

* * *

OK, so the simulated tree works great. However the default way of returning
the info - an array of IDs in the new order - is not going to work here
because of the problem of other people editing the tree at the same time.
We need to make this more atomic. But jQuery only knows what the DOM looked
like after the drag and drop...

So: make a JS array of all of the IDs when pageTree loads. Instead of 
submitting the final array, compare them and submit a description of
what needs to be done.

What does that comparison look like? Um. One thing got changed. Find
that thing. Then find out what page is now BEFORE it in the array. From that
info we can infer what operation should be done: either
moveasprevsibling, moveasnextsibling, moveasfirstchild or move aslastchild.


* * *

The simulated tree isn't quite right. I need "new child" destination points
for pages that currently have no children yet.

The dragging and dropping is weird, it's not clear what it means to drag
stuff into the vicinity of "before" or "after." The solution is probably
"click on the item you want to move, now click where you want it to go."
That's "not as cool" but actually MUCH easier to understand. Also it doesn't
have dumb scrolling issues.

* * *

Another route would be to lock the whole damn site while this thing
is active. Then we could drag up a storm and commit lots of changes,
rebuilding the nested set. But locking the site is impractical.



    